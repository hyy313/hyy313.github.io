<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on hyy space</title><link>https://hyy313.github.io/post/</link><description>Recent content in Posts on hyy space</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://hyy313.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>bash config</title><link>https://hyy313.github.io/p/bash-config/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/bash-config/</guid><description>zsh 安装zsh
sudo apt-get install zsh 安装ohmyzsh
sh -c &amp;#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; 配置ohmyzsh
zsh字体:fonts-powerline
sudo apt-get install fonts-powerline zsh主题
agnoster
修改.zshrc中ZSH_THEME=&amp;quot;agnoster&amp;rdquo;
spaceship
git clone https://github.com/denysdovhan/spaceship-prompt.git &amp;#34;$ZSH_CUSTOM/themes/spaceship-prompt&amp;#34; --depth=1 ln -s &amp;#34;$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme&amp;#34; &amp;#34;$ZSH_CUSTOM/themes/spaceship.zsh-theme&amp;#34; 修改.zshrc中ZSH_THEME=&amp;quot;spaceship&amp;rdquo;
zsh插件
incr
git clone git://github.com/makeitjoe/incr.zsh $ZSH_CUSTOM/plugins/incr .zshrc中增加plugins(incr)
最后别忘了source .zshrc激活配置，字体需要重新开一个terminal即可生效。</description></item><item><title>ubuntu clash config</title><link>https://hyy313.github.io/p/ubuntu-clash-config/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/ubuntu-clash-config/</guid><description>参考：
一篇非常好的Ubuntu配置文章： https://juejin.cn/post/6844904149822210056#heading-18
自动脚本： https://akillcool.github.io/post/clash-with-auto-update-config/
下载clash https://github.com/Dreamacro/clash/releases下载最新amd64.gz包
安装clash # 解压 gzip clash-linux-amd64-version.gz -d # 拷贝到可执行目录下 sudo mv clash-linux-amd64-version.gz /usr/local/bin/clash # 赋予执行权限 sudo chmod +x /usr/local/bin/clash 启动clash 直接启动 clash 后台启动 clash &amp;amp; 开机启动 通过命令nohup clash设置脚本，将脚本加入开机启动。
类似脚本：
# start-service.sh #!/bin/bash nohup clash exit 0 记得给脚本sudo chmod +x shname.sh加上执行权限
将脚本加入start-up
通过systemctl设置开机启动，启停。自动更新配置 注册服务 # edit and save this file to /usr/lib/systemd/system/clash.service [Unit] Description=clash After=network.target [Service] WorkingDirectory=&amp;#34;your home directory&amp;#34;/.</description></item><item><title>重新学c++ day1 c++ 类大小和默认函数</title><link>https://hyy313.github.io/p/%E9%87%8D%E6%96%B0%E5%AD%A6c-day1-c-%E7%B1%BB%E5%A4%A7%E5%B0%8F%E5%92%8C%E9%BB%98%E8%AE%A4%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/%E9%87%8D%E6%96%B0%E5%AD%A6c-day1-c-%E7%B1%BB%E5%A4%A7%E5%B0%8F%E5%92%8C%E9%BB%98%E8%AE%A4%E5%87%BD%E6%95%B0/</guid><description>源自快手面试，痛定思痛，决定重新深入学习一遍c++！
size of class 空类大小 带一个函数的类大小 继承2的类的大小 虚继承2的类的大小 带一个虚函数的类的大小 继承5的空类大小 虚继承5的空类大小 #include &amp;lt;iostream&amp;gt; class C1 { }; class C2 { public: void func() {} }; class C3 : C2 { }; class C4 : virtual C2 { }; class C5 { public: virtual void vfunc() {} }; class C6 : C5 { }; class C7 : virtual C5 { }; int main() { std::cout &amp;lt;&amp;lt; &amp;#34;C1(empty class) size = &amp;#34; &amp;lt;&amp;lt; sizeof(C1) &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;C2(have a function) size = &amp;#34; &amp;lt;&amp;lt; sizeof(C2) &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;C3(extend C2) size = &amp;#34; &amp;lt;&amp;lt; sizeof(C3) &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;C4(virtual extend C2) size = &amp;#34; &amp;lt;&amp;lt; sizeof(C4) &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;C5(have a virtual function) size = &amp;#34; &amp;lt;&amp;lt; sizeof(C5) &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;C6(extend C5) size = &amp;#34; &amp;lt;&amp;lt; sizeof(C6) &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;C7(virtual extend C5) size = &amp;#34; &amp;lt;&amp;lt; sizeof(C7) &amp;lt;&amp;lt; std::endl; } 运行结果 avatar</description></item><item><title>ubuntu 安装 docker</title><link>https://hyy313.github.io/p/ubuntu-%E5%AE%89%E8%A3%85-docker/</link><pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/ubuntu-%E5%AE%89%E8%A3%85-docker/</guid><description>1.通过脚本安装，配置镜像阿里云 curl &amp;#34;https://get.docker.com&amp;#34; -o docker.sh sh docker.sh --mirror Aliyun 2.非root用户需要配置用户组(需log out) sudo usermod -aG docker yourUsername 3.启动docker service docker start</description></item><item><title>autohotkey auto run</title><link>https://hyy313.github.io/p/autohotkey-auto-run/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/autohotkey-auto-run/</guid><description>找到脚本文件后选中它, 接着按下 Control-C. 右键点击开始按钮 (通常在屏幕的左下角) 并选择 &amp;ldquo;浏览所有用户&amp;rdquo;. 定位到程序文件夹中的启动文件夹. 在菜单栏选择 编辑 -&amp;gt; 粘贴快捷方式. 脚本的快捷方式现在应该出现在启动文件夹中了. C:\Users\用户名称\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</description></item><item><title>Markdown Syntax Guide</title><link>https://hyy313.github.io/p/markdown-syntax-guide/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/markdown-syntax-guide/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>Rich Content</title><link>https://hyy313.github.io/p/rich-content/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/rich-content/</guid><description>Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.
YouTube Privacy Enhanced Shortcode Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; } “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.</description></item><item><title>Placeholder Text</title><link>https://hyy313.github.io/p/placeholder-text/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/placeholder-text/</guid><description>&lt;p>Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p></description></item><item><title>Math Typesetting</title><link>https://hyy313.github.io/p/math-typesetting/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/math-typesetting/</guid><description>&lt;p>Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p></description></item><item><title>Emoji Support</title><link>https://hyy313.github.io/p/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://hyy313.github.io/p/emoji-support/</guid><description>&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p></description></item></channel></rss>